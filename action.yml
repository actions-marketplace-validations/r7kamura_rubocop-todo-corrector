name: rubocop-todo-corrector
description: Auto-correct RuboCop ToDo offenses and create pull request.
inputs:
  github_token:
    description: GitHub access token to run another workflows from new pull request.
    required: false
  label:
    description: Pull request label name.
    required: false
    default: ""
  mode:
    description: Mode to select deletion target.
    required: false
    default: random
  only_safe:
    description: Exclude unsafe cops.
    required: false
    default: true
runs:
  using: composite
  steps:
    - uses: ruby/setup-ruby@v1
      with:
        bundler-cache: true
        ruby-version: 3.1
    - run: gem install --no-document rubocop_todo_corrector:0.7.0
      shell: bash
    - uses: actions/checkout@v3
    - name: rubocop_todo_corrector bundle
      run: rubocop_todo_corrector bundle
      shell: bash
    - name: rubocop_todo_corrector pick
      id: pick
      run: |
        cop_name=$(rubocop_todo_corrector pick --mode="${{ inputs.mode }}" ${{ inputs.only_safe && '--only-safe' || '' }})
        echo "::set-output name=cop_name::${cop_name}"
      shell: bash
    - name: rubocop_todo_corrector remove
      run: rubocop_todo_corrector remove --cop-name="${{ steps.pick.outputs.cop_name }}"
      shell: bash
    - name: rubocop_todo_corrector correct
      run: rubocop_todo_corrector correct ${{ inputs.only_safe && '--only-safe' || '' }}
      shell: bash
    - name: rubocop_todo_corrector generate
      run: rubocop_todo_corrector generate
      shell: bash
    - name: git push
      run: |
        git config user.name "${GITHUB_ACTOR}"
        git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
        branch_name="rubocop-todo-corrector-${GITHUB_RUN_ID}"
        git switch --create "${branch_name}"
        git add .
        rubocop_todo_corrector describe --cop-name="${{ steps.pick.outputs.cop_name }}" | git commit --file=-
        git push --set-upstream origin "${branch_name}"
      shell: bash
    - name: gh pr create
      run: gh pr create --fill --label="${{ inputs.label }}"
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.github_token || github.token }}
branding:
  color: red
  icon: git-pull-request
